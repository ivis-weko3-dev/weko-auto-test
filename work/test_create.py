# Generated by Selenium IDE
# coding:utf-8
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import config
from config import SetupDriver
import datetime

d = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%s")

def test_search(driver):
    driver.get(config.base_url)
    driver.find_element(By.XPATH,"/html/body/div/div[2]/button[3]").click()
    driver.find_element(By.XPATH,"/html/body/div/div[3]/p[2]/a").click()
    
    driver.find_element(By.XPATH, '//*[@id="q"]').send_keys("aaa")
    # driver.find_element(By.XPATH, "/html/body/div[2]/div[2]/div/div/div/div/div[2]/div/div/div/div[2]/div/div/form/div[1]/div/div/input[1]").send_keys("aaa")
    driver.find_element(By.XPATH, '//*[@id="top-search-btn"]').click()
    # driver.find_element(By.XPATH, '/html/body/div[2]/div[2]/div/div/div/div/div[2]/div/div/div/div[2]/div/div/form/div[1]/div/div/div[1]/button').click()

    # driver.find_element(By.ID, "top-search-btn").click()
    # driver.find_element(By.CSS_SELECTOR, ".panel:nth-child(1) > .panel-heading .glyphicon").click()

    time.sleep(5)
    driver.save_screenshot(
        config.base_save_folder + d + "test1.png"
    )

def test_download(driver):
    # Test name: sfdfsdsfsd
    # Step # | name | target | value | comment
    # warning throw
    driver.get(config.base_url + "/records/2")
    driver.find_element(By.XPATH,"/html/body/div/div[2]/button[3]").click()
    time.sleep(1)
    driver.find_element(By.XPATH,"/html/body/div/div[3]/p[2]/a").click()
    time.sleep(1)

    driver.save_screenshot(
        config.base_save_folder + d + "test2.png"
    )
    # driver.find_element(By.XPATH, '//*[@id="download-12ed9e1d-fa1d-4031-9315-24f6b05789a9"]').click()
    driver.find_element(By.XPATH, '//*[@id="detail-item"]/table/tbody/tr/td[3]/a[1]').click()
    # url = "https://192.168.56.107/record/12/files/%E7%B5%8C%E5%96%B6%E5%AE%9F%E5%8B%99%EF%BC%BF2023%E5%B9%B4%E5%BA%A61Q_6%E6%9C%88Job%E7%A8%BC%E5%83%8D%E3%81%A8%E8%A6%81%E5%93%A1%E8%A8%88%E7%94%BB%EF%BC%BF%E5%BA%83%E5%A0%B1%E7%89%88.pdf"
    # テストでアクセスするURLを指定
    # driver.get(url)
    # time.sleep(4)

def test_create_workflow(driver):
    # Test name: sfdfsdsfsd
    # Step # | name | target | value | comment
    # warning throw
    driver.get("http://192.168.56.107/")
    driver.find_element(By.XPATH,"/html/body/div/div[2]/button[3]").click()
    time.sleep(1)
    driver.find_element(By.XPATH,"/html/body/div/div[3]/p[2]/a").click()
    time.sleep(1)
    # login
    driver.find_element(By.LINK_TEXT, "ログイン").click()
    driver.find_element(By.ID, "email").click()
    driver.find_element(By.ID, "email").send_keys("wekosoftware@nii.ac.jp")
    driver.find_element(By.ID, "password").click()
    driver.find_element(By.ID, "password").send_keys("uspass123")
    driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    driver.set_window_size(1095, 1020)
    # 3 | click | linkText=ワークフロー |  | 
    driver.find_element(By.LINK_TEXT, "ワークフロー").click()
    # 4 | click | css=.btn-success |  | 
    driver.find_element(By.CSS_SELECTOR, ".btn-success").click()
    # 5 | click | id=btn-begin-7 |  | 
    time.sleep(2)
    driver.find_element(By.ID, "btn-begin-7").click()
    # 6 | click | id=subitem_1551255647225 |  | 
    time.sleep(3)
    driver.execute_script('window.scrollBy(0, 1000);')
    driver.find_element(By.ID, "subitem_1551255647225").click()
    # 7 | type | id=subitem_1551255647225 | selenium test 2 | 
    driver.find_element(By.ID, "subitem_1551255647225").send_keys("selenium test 100")
    # 8 | select | name=item_1617186331708.0.subitem_1551255648112 | label=ja | 
    time.sleep(2)
    dropdown = driver.find_element(By.NAME, "item_1617186331708.0.subitem_1551255648112")
    dropdown.find_element(By.XPATH, "//option[. = 'ja']").click()
    driver.save_screenshot('test_create_workflow_metadata1.png')
    # 9 | click | name=item_1617258105262.resourcetype |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(2)
    driver.find_element(By.NAME, "item_1617258105262.resourcetype").click()
    # 10 | select | name=item_1617258105262.resourcetype | label=conference paper | 
    dropdown = driver.find_element(By.NAME, "item_1617258105262.resourcetype")
    dropdown.find_element(By.XPATH, "//option[. = 'conference paper']").click()
    driver.save_screenshot('test_create_workflow_metadata2.png')
    # 11 | click | linkText=書誌情報 |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    driver.find_element(By.LINK_TEXT, "書誌情報").click()
    driver.find_element(By.LINK_TEXT, "雑誌名").click()
    driver.find_element(By.ID, "bibliographic_title").send_keys("Selenium Test")
    biblio_lang = driver.find_element(By.XPATH, "/html/body/div[3]/div[2]/div[3]/div/div/div/div[2]/div/div/div/div[2]/div[2]/div/div[5]/div[2]/div[6]/div[1]/div[4]/div/div/div[2]/invenio-files-uploader/invenio-records/div[2]/div[8]/invenio-records-form/div/div/form/bootstrap-decorator[32]/fieldset/div/div[2]/sf-decorator[1]/fieldset/div/div[2]/div/div[1]/ol/li/sf-decorator/div/sf-decorator[2]/div/div/select")
    biblio_lang.send_keys("ja")
    # 12 | click | id=bibliographicVolumeNumber |  | 
    driver.find_element(By.ID, "bibliographicVolumeNumber").click()
    # 13 | type | id=bibliographicVolumeNumber | 11 | 
    driver.find_element(By.ID, "bibliographicVolumeNumber").send_keys("11")
    # 14 | click | id=bibliographicIssueNumber |  | 
    driver.find_element(By.ID, "bibliographicIssueNumber").click()
    # 15 | type | id=bibliographicIssueNumber | 12 | 
    driver.find_element(By.ID, "bibliographicIssueNumber").send_keys("12")
    # 16 | click | id=bibliographicPageStart |  | 
    driver.find_element(By.ID, "bibliographicPageStart").click()
    # 17 | type | id=bibliographicPageStart | 123 | 
    driver.find_element(By.ID, "bibliographicPageStart").send_keys("123")
    # 18 | click | id=bibliographicPageEnd |  driver.find_element(By.ID, "bibliographicPageEnd").click()
    # 19 | type | id=bibliographicPageEnd | 234 | 
    driver.find_element(By.ID, "bibliographicPageEnd").send_keys("234")
    # 20 | click | id=bibliographicNumberOfPages |  | 
    driver.find_element(By.ID, "bibliographicNumberOfPages").click()
    # 21 | type | id=bibliographicNumberOfPages | 111 | 
    driver.find_element(By.ID, "bibliographicNumberOfPages").send_keys("111")
    driver.save_screenshot('test_create_workflow_metadata3.png')
    # 22 | click | css=.next-button > .glyphicon |  | 
    driver.find_element(By.CSS_SELECTOR, ".next-button > .glyphicon").click()
    # 23 | runScript | window.scrollTo(0,3128) |  | 
    time.sleep(2)
    driver.execute_script("window.scrollTo(0,3128)")
    # 24 | click | css=tree-internal:nth-child(5) input |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(3)
    driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(5) input").click()
    driver.save_screenshot('test_create_workflow_tree.png')
    # 25 | click | css=.btn:nth-child(3) |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(3)
    driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    # 26 | click | id=btn-finish |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(3)
    driver.find_element(By.ID, "btn-finish").click()
    # 27 | click | id=item-link-run-btn |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(3)
    driver.find_element(By.ID, "item-link-run-btn").click()
    # 28 | click | id=btn-approval |  | 
    driver.execute_script('window.scrollBy(0, 1000);')
    time.sleep(3)
    driver.find_element(By.ID, "btn-approval").click()#btn-approval
    # 29 | click | id=link_record_detail |  | 
    time.sleep(3)
    driver.execute_script('window.scrollBy(0, 1000);')
    driver.find_element(By.ID, "link_record_detail").click()
    # 30 | click | id=btnModalClose |  | 
    time.sleep(3)
    driver.find_element(By.ID, "btnModalClose").click()
    # 31 | click | css=.btn:nth-child(3) |  | 
    time.sleep(3)
    driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    time.sleep(3)
    driver.save_screenshot('test_create_workflow.png')
    time.sleep(3)

def main():
    try:
        setup_driver = SetupDriver()
        setup_driver.setup_driver()
        # test_search(setup_driver.driver)
        test_download(setup_driver.driver)
        # test_create_workflow(setup_driver.driver)

        time.sleep(3)
        setup_driver.teardown_method()
    except Exception as ex:
        print(ex)
        setup_driver.teardown_method()

if __name__ == "__main__":
    main()